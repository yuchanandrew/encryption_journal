networks:
  traefik_public:
    external: false
  # db_internal:
  #   internal: true
  # backend_internal:
  #   internal: true

services:
  traefik:
    image: traefik:3.5.0
    command:
      - "--configFile=/traefik.yml"
    ports:
      - "80:80"
      - "443:443"
      - "8080:8080"
    environment:
      - TZ=UTC
      - CF_DNS_API_TOKEN=${CLOUDFLARE_API_KEY}
    volumes:
      - "./letsencrypt:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik.yml:/traefik.yml:ro"
    # restart: unless-stopped
    networks:
      - traefik_public

  # backend:
  #   build: ./server/node_server
  #   depends_on:
  #     - db
  #   env_file:
  #     - ./server/.env
  #   networks:
  #     - backend_internal
  #     - db_internal

  # model:
  #   build: ./server/model
  #   networks:
  #     - traefik_public
  #     - db_internal
  #     - backend_internal

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.dev
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`emjournal.dev`) || Host(`www.emjournal.dev`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    networks:
      - traefik_public
      # - backend_internal

  # db:
  #   image: mysql:latest
  #   env_file:
  #     - ./server/.env
  #   volumes:
  #   - mysql_data:/var/lib/mysql
  #   - ./server/encryption.sql:/docker-entrypoint-initdb.d/encryption.sql
  #   networks:
  #     - db_internal

volumes:
  # mysql_data:
  letsencrypt: